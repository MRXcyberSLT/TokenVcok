#Hwyo
import base64
exec(base64.b64decode('aW1wb3J0IG9zLCBzeXMsIHJlcXVlc3RzLCByZSwgYnM0DQpmcm9tIGJzNCBpbXBvcnQgQmVhdXRpZnVsU291cCBhcyBicw0KDQpNID0gIlx4MWJbMzg7NTsxOTZtIiAjIE1lcmFoDQpKID0gIlx4MWJbMzg7NTsyMDhtIiAjIEppbmdnYQ0KSCA9ICJceDFiWzM4OzU7NDZtIiAgIyBIaWphdQ0KUCA9ICJceDFiWzM4OzU7MjMxbSIgIyBQdXRpaA0KDQpkZWYgY2xlYXIoKToNCiAgICBpZiAibGludXgiIGluIHN5cy5wbGF0Zm9ybS5sb3dlcigpOg0KICAgICAgICB0cnk6b3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgIGV4Y2VwdDpwYXNzDQogICAgZWxpZiAid2luIiBpbiBzeXMucGxhdGZvcm0ubG93ZXIoKToNCiAgICAgICAgdHJ5Om9zLnN5c3RlbSgiY2xzIikNCiAgICAgICAgZXhjZXB0OnBhc3MNCiAgICBlbHNlOg0KICAgICAgICB0cnk6b3Muc3lzdGVtKCJjbGVhciIpDQogICAgICAgIGV4Y2VwdDpwYXNzDQpkZWYgaW5wdXRfY29va2llKCk6DQogICAgcHJpbnQoJycnDQoNCuKWkeKWiOKWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKVl+KWkeKWkeKWkeKWkeKWkeKWiOKWiOKVl+KWkeKWkeKWkeKWkeKWkeKAg+KAg+KWiOKWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKWiOKWiOKWiOKVl+KWkeKWiOKWiOKVl+KWkeKWkeKWiOKWiOKVl+KWiOKWiOKWiOKWiOKWiOKWiOKWiOKVl+KWiOKWiOKWiOKVl+KWkeKWkeKWiOKWiOKVlw0K4paI4paI4pWU4pWQ4pWQ4paI4paI4pWX4paI4paI4pWR4paR4paR4paR4paR4paR4paI4paI4pWR4paR4paR4paR4paR4paR4oCD4oCD4pWa4pWQ4pWQ4paI4paI4pWU4pWQ4pWQ4pWd4paI4paI4pWU4pWQ4pWQ4paI4paI4pWX4paI4paI4pWR4paR4paI4paI4pWU4pWd4paI4paI4pWU4pWQ4pWQ4pWQ4pWQ4pWd4paI4paI4paI4paI4pWX4paR4paI4paI4pWRDQrilojilojilojilojilojilojilojilZHilojilojilZHilpHilpHilpHilpHilpHilojilojilZHilpHilpHilpHilpHilpHigIPigIPilpHilpHilpHilojilojilZHilpHilpHilpHilojilojilZHilpHilpHilojilojilZHilojilojilojilojilojilZDilZ3ilpHilojilojilojilojilojilZfilpHilpHilojilojilZTilojilojilZfilojilojilZENCuKWiOKWiOKVlOKVkOKVkOKWiOKWiOKVkeKWiOKWiOKVkeKWkeKWkeKWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWkeKWkeKAg+KAg+KWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWkeKWiOKWiOKVkeKWkeKWkeKWiOKWiOKVkeKWiOKWiOKVlOKVkOKWiOKWiOKVl+KWkeKWiOKWiOKVlOKVkOKVkOKVneKWkeKWkeKWiOKWiOKVkeKVmuKWiOKWiOKWiOKWiOKVkQ0K4paI4paI4pWR4paR4paR4paI4paI4pWR4paI4paI4paI4paI4paI4paI4paI4pWX4paI4paI4paI4paI4paI4paI4paI4pWX4oCD4oCD4paR4paR4paR4paI4paI4pWR4paR4paR4paR4pWa4paI4paI4paI4paI4paI4pWU4pWd4paI4paI4pWR4paR4pWa4paI4paI4pWX4paI4paI4paI4paI4paI4paI4paI4pWX4paI4paI4pWR4paR4pWa4paI4paI4paI4pWRDQrilZrilZDilZ3ilpHilpHilZrilZDilZ3ilZrilZDilZDilZDilZDilZDilZDilZ3ilZrilZDilZDilZDilZDilZDilZDilZ3igIPigIPilpHilpHilpHilZrilZDilZ3ilpHilpHilpHilpHilZrilZDilZDilZDilZDilZ3ilpHilZrilZDilZ3ilpHilpHilZrilZDilZ3ilZrilZDilZDilZDilZDilZDilZDilZ3ilZrilZDilZ3ilpHilpHilZrilZDilZDilZ0NCicnJykNCiAgICBwcmludCgnJXNBcGFiaWxhIEEyRiBPbiwgQnVrYSBMaW5rIERpYmF3YWgsIExhbHUgTWFzdWtrYW4gS29kZSBBMkYnJShQKSkNCiAgICBwcmludCgnJXNodHRwczovL2J1c2luZXNzLmZhY2Vib29rLmNvbS9idXNpbmVzc19sb2NhdGlvbnNcbiclKFApKQ0KICAgIGNvb2tpZSA9IGlucHV0KCclc01hc3Vra2FuIENvb2tpZSA6ICVzJyUoUCxKKSkNCiAgICBUb2tlbjEgPSBnZW5lcmF0ZV90b2tlbl9lYWFiKGNvb2tpZSk7IFBlcm0xID0gcmVxX2luZm9fdG9rZW4oY29va2llLFRva2VuMSkgIyBQb3dlciBFZGl0b3IgVG9rZW4NCiAgICBUb2tlbjIgPSBnZW5lcmF0ZV90b2tlbl9lYWFnKGNvb2tpZSk7IFBlcm0yID0gcmVxX2luZm9fdG9rZW4oY29va2llLFRva2VuMikgIyBCdXNpbmVzcyBNYW5hZ2VyIFRva2VuDQogICAgVG9rZW4zID0gZ2VuZXJhdGVfdG9rZW5fZWFhaShjb29raWUpOyBQZXJtMyA9IHJlcV9pbmZvX3Rva2VuKGNvb2tpZSxUb2tlbjMpICMgQWRzIE1hbmFnZW1lbnQgVG9rZW4NCiAgICBUb2tlbjQgPSBnZW5lcmF0ZV90b2tlbl9lYWFkKGNvb2tpZSk7IFBlcm00ID0gcmVxX2luZm9fdG9rZW4oY29va2llLFRva2VuNCkgIyBBZHMgRXZlbnQgTWFuYWdlciBUb2tlbg0KICAgIFRva2VuNSA9IGdlbmVyYXRlX3Rva2VuX2VhYUMoY29va2llKTsgUGVybTUgPSByZXFfaW5mb190b2tlbihjb29raWUsVG9rZW41KSAjIEFkcyBCbG9jayBMaXN0IFRva2VuDQogICAgVG9rZW42ID0gZ2VuZXJhdGVfdG9rZW5fZWFhZShjb29raWUpOyBQZXJtNiA9IHJlcV9pbmZvX3Rva2VuKGNvb2tpZSxUb2tlbjYpICMgQWNjb3VudCBRdWFsaXR5IFRva2VuDQogICAgVG9rZW43ID0gZ2VuZXJhdGVfdG9rZW5fZWFhZihjb29raWUpOyBQZXJtNyA9IHJlcV9pbmZvX3Rva2VuKGNvb2tpZSxUb2tlbjcpICMgTGlmdCBTdHVkeSBDcmVhdGlvbiBUb2tlbg0KICAgIFRva2VuOCA9IGdlbmVyYXRlX3Rva2VuX2VhYmIoY29va2llKTsgUGVybTggPSByZXFfaW5mb190b2tlbihjb29raWUsVG9rZW44KSAjIEh1YiBNYXRlcmkgSWtsYW4gVG9rZW4NCiAgICBwcmludCgnXG4lc1sgUG93ZXIgRWRpdG9yIFRva2VuIF1cbiVzJXNcbiVzWyBQZXJtaXNzaW9ucyBdXG4lcyVzJXMnICAgICAgICAlKFAsSixUb2tlbjEsUCxILFBlcm0xLFApKQ0KICAgIHByaW50KCdcbiVzWyBCdXNpbmVzcyBNYW5hZ2VyIFRva2VuIF1cbiVzJXNcbiVzWyBQZXJtaXNzaW9ucyBdXG4lcyVzJXMnICAgICUoUCxKLFRva2VuMixQLEgsUGVybTIsUCkpDQogICAgcHJpbnQoJ1xuJXNbIEFkcyBNYW5hZ2VtZW50IFRva2VuIF1cbiVzJXNcbiVzWyBQZXJtaXNzaW9ucyBdXG4lcyVzJXMnICAgICAgJShQLEosVG9rZW4zLFAsSCxQZXJtMyxQKSkNCiAgICBwcmludCgnXG4lc1sgQWRzIEV2ZW50IE1hbmFnZXIgVG9rZW4gXVxuJXMlc1xuJXNbIFBlcm1pc3Npb25zIF1cbiVzJXMlcycgICAlKFAsSixUb2tlbjQsUCxILFBlcm00LFApKQ0KICAgIHByaW50KCdcbiVzWyBBZHMgQmxvY2sgTGlzdCBUb2tlbiBdXG4lcyVzXG4lc1sgUGVybWlzc2lvbnMgXVxuJXMlcyVzJyAgICAgICUoUCxKLFRva2VuNSxQLEgsUGVybTUsUCkpDQogICAgcHJpbnQoJ1xuJXNbIEFjY291bnQgUXVhbGl0eSBUb2tlbiBdXG4lcyVzXG4lc1sgUGVybWlzc2lvbnMgXVxuJXMlcyVzJyAgICAgJShQLEosVG9rZW42LFAsSCxQZXJtNixQKSkNCiAgICBwcmludCgnXG4lc1sgTGlmdCBTdHVkeSBDcmVhdGlvbiBUb2tlbiBdXG4lcyVzXG4lc1sgUGVybWlzc2lvbnMgXVxuJXMlcyVzJyAlKFAsSixUb2tlbjcsUCxILFBlcm03LFApKQ0KICAgIHByaW50KCdcbiVzWyBIdWIgTWF0ZXJpIElrbGFuIFRva2VuIF1cbiVzJXNcbiVzWyBQZXJtaXNzaW9ucyBdXG4lcyVzJXMnICAgICUoUCxKLFRva2VuOCxQLEgsUGVybTgsUCkpDQoNCmRlZiByZXFfaW5mb190b2tlbihjb29raSx0b2tlbik6DQogICAgdHJ5Og0KICAgICAgICBjb29raWUgPSB7J2Nvb2tpZSc6Y29va2l9DQogICAgICAgIHVybCAgICA9ICdodHRwczovL2RldmVsb3BlcnMuZmFjZWJvb2suY29tL3Rvb2xzL2RlYnVnL2FjY2Vzc3Rva2VuLz9hY2Nlc3NfdG9rZW49JXMmdmVyc2lvbj12MTUuMCclKHRva2VuKQ0KICAgICAgICB3aXRoIHJlcXVlc3RzLlNlc3Npb24oKSBhcyB4eXo6DQogICAgICAgICAgICByZXEgPSBicyh4eXouZ2V0KHVybCxjb29raWVzPWNvb2tpZSkuY29udGVudCwnaHRtbC5wYXJzZXInKQ0KICAgICAgICAgICAgY3JmID0gcmVxLmZpbmQoJ2EnLGhyZWY9Jy9kb2NzL3JlZmVyZW5jZS9sb2dpbi8jcGVybWlzc2lvbnMnKQ0KICAgICAgICAgICAgcmV0dXJuKGNyZi50ZXh0KQ0KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgcmV0dXJuKCclc1Blcm1pc3Npb25zIE5vdCBBdmFpbGFibGUlcyclKE0sUCkpDQoNCmRlZiBnZW5lcmF0ZV90b2tlbl9lYWFiKGNvayk6ICMgUG93ZXIgRWRpdG9yIFRva2VuDQogICAgdHJ5Og0KICAgICAgICBjb29raWUgPSB7J2Nvb2tpZSc6Y29rfQ0KICAgICAgICB3aXRoIHJlcXVlc3RzLlNlc3Npb24oKSBhcyB4eXo6DQogICAgICAgICAgICB1cmwgPSAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2Fkc21hbmFnZXIvbWFuYWdlL2NhbXBhaWducycNCiAgICAgICAgICAgIHJlcSA9IHh5ei5nZXQodXJsLGNvb2tpZXM9Y29va2llKQ0KICAgICAgICAgICAgc2V0ID0gcmUuc2VhcmNoKCdhY3Q9KC4qPykmbmF2X3NvdXJjZScsc3RyKHJlcS5jb250ZW50KSkuZ3JvdXAoMSkNCiAgICAgICAgICAgIG5layA9ICclcz9hY3Q9JXMmbmF2X3NvdXJjZT1ub19yZWZlcnJlciclKHVybCxzZXQpDQogICAgICAgICAgICByb3EgPSB4eXouZ2V0KG5layxjb29raWVzPWNvb2tpZSkNCiAgICAgICAgICAgIHRvayA9IHJlLnNlYXJjaCgnYWNjZXNzVG9rZW49IiguKj8pIicsc3RyKHJvcS5jb250ZW50KSkuZ3JvdXAoMSkNCiAgICAgICAgICAgIHJldHVybih0b2spDQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICByZXR1cm4oJ0Nvb2tpZXMgSW52YWxpZCcpDQoNCmRlZiBnZW5lcmF0ZV90b2tlbl9lYWFnKGNvayk6ICMgQnVzaW5lc3MgTWFuYWdlciBUb2tlbg0KICAgIHRyeToNCiAgICAgICAgY29va2llID0geydjb29raWUnOmNva30NCiAgICAgICAgd2l0aCByZXF1ZXN0cy5TZXNzaW9uKCkgYXMgeHl6Og0KICAgICAgICAgICAgdXJsID0gJ2h0dHBzOi8vYnVzaW5lc3MuZmFjZWJvb2suY29tL2J1c2luZXNzX2xvY2F0aW9ucycNCiAgICAgICAgICAgIHJlcSA9IHh5ei5nZXQodXJsLGNvb2tpZXM9Y29va2llKQ0KICAgICAgICAgICAgdG9rID0gcmUuc2VhcmNoKCcoXFsiRUFBR1x3KyknLCByZXEudGV4dCkuZ3JvdXAoMSkucmVwbGFjZSgnWyInLCcnKQ0KICAgICAgICAgICAgcmV0dXJuKHRvaykNCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgIHJldHVybignQ29va2llcyBJbnZhbGlkJykNCg0KZGVmIGdlbmVyYXRlX3Rva2VuX2VhYWkoY29rKTogIyBBZHMgTWFuYWdlbWVudCBUb2tlbg0KICAgIHRyeToNCiAgICAgICAgY29va2llID0geydjb29raWUnOmNva30NCiAgICAgICAgd2l0aCByZXF1ZXN0cy5TZXNzaW9uKCkgYXMgeHl6Og0KICAgICAgICAgICAgdXJsID0gJ2h0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9hZHMvbWFuYWdlci9iaWxsaW5nX2hpc3Rvcnkvc3VtbWFyeS8nDQogICAgICAgICAgICByZXEgPSB4eXouZ2V0KHVybCxjb29raWVzPWNvb2tpZSkNCiAgICAgICAgICAgIHRvayA9IHJlLnNlYXJjaCgne2FjY2Vzc190b2tlbjoiKC4qPykiJyxyZXEudGV4dCkuZ3JvdXAoMSkNCiAgICAgICAgICAgIHJldHVybih0b2spDQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICByZXR1cm4oJ0Nvb2tpZXMgSW52YWxpZCcpDQoNCmRlZiBnZW5lcmF0ZV90b2tlbl9lYWFkKGNvayk6ICMgQWRzIEV2ZW50IE1hbmFnZXIgVG9rZW4NCiAgICB0cnk6DQogICAgICAgIGNvb2tpZSA9IHsnY29va2llJzpjb2t9DQogICAgICAgIHdpdGggcmVxdWVzdHMuU2Vzc2lvbigpIGFzIHh5ejoNCiAgICAgICAgICAgIHVybCA9ICdodHRwczovL3d3dy5mYWNlYm9vay5jb20vZXZlbnRzX21hbmFnZXIyL292ZXJ2aWV3Jw0KICAgICAgICAgICAgcmVxID0geHl6LmdldCh1cmwsY29va2llcz1jb29raWUpDQogICAgICAgICAgICB0b2sgPSByZS5zZWFyY2goJ3siYWNjZXNzVG9rZW4iOiIoRUFBZFx3KyknLHJlcS50ZXh0KS5ncm91cCgxKQ0KICAgICAgICAgICAgcmV0dXJuKHRvaykNCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgIHJldHVybignQ29va2llcyBJbnZhbGlkJykNCg0KZGVmIGdlbmVyYXRlX3Rva2VuX2VhYUMoY29rKTogIyBBZHMgQmxvY2sgTGlzdCBUb2tlbg0KICAgIHRyeToNCiAgICAgICAgY29va2llID0geydjb29raWUnOmNva30NCiAgICAgICAgd2l0aCByZXF1ZXN0cy5TZXNzaW9uKCkgYXMgeHl6Og0KICAgICAgICAgICAgdXJsID0gJ2h0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9icmFuZF9zYWZldHkvY29udHJvbHMnDQogICAgICAgICAgICByZXEgPSB4eXouZ2V0KHVybCxjb29raWVzPWNvb2tpZSkNCiAgICAgICAgICAgIHRvayA9IHJlLnNlYXJjaCgneyJhY2Nlc3NUb2tlbiI6IihFQUFDXHcrKScscmVxLnRleHQpLmdyb3VwKDEpDQogICAgICAgICAgICByZXR1cm4odG9rKQ0KICAgIGV4Y2VwdCBFeGNlcHRpb24gYXMgZToNCiAgICAgICAgcmV0dXJuKCdDb29raWVzIEludmFsaWQnKQ0KDQpkZWYgZ2VuZXJhdGVfdG9rZW5fZWFhZShjb2spOiAjIEFjY291bnQgUXVhbGl0eSBUb2tlbg0KICAgIHRyeToNCiAgICAgICAgY29va2llID0geydjb29raWUnOmNva30NCiAgICAgICAgd2l0aCByZXF1ZXN0cy5TZXNzaW9uKCkgYXMgeHl6Og0KICAgICAgICAgICAgdXJsID0gJ2h0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9hY2NvdW50cXVhbGl0eS8nDQogICAgICAgICAgICByZXEgPSB4eXouZ2V0KHVybCxjb29raWVzPWNvb2tpZSkNCiAgICAgICAgICAgIHRvayA9IHJlLnNlYXJjaCgnImFjY2Vzc1Rva2VuIjoiKEVBQUVcdyspJyxyZXEudGV4dCkuZ3JvdXAoMSkNCiAgICAgICAgICAgIHJldHVybih0b2spDQogICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOg0KICAgICAgICByZXR1cm4oJ0Nvb2tpZXMgSW52YWxpZCcpDQoNCmRlZiBnZW5lcmF0ZV90b2tlbl9lYWFmKGNvayk6ICMgTGlmdCBTdHVkeSBDcmVhdGlvbiBUb2tlbg0KICAgIHRyeToNCiAgICAgICAgY29va2llID0geydjb29raWUnOmNva30NCiAgICAgICAgd2l0aCByZXF1ZXN0cy5TZXNzaW9uKCkgYXMgeHl6Og0KICAgICAgICAgICAgdXJsID0gJ2h0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS90ZXN0LWFuZC1sZWFybi90ZXN0Jw0KICAgICAgICAgICAgcmVxID0geHl6LmdldCh1cmwsY29va2llcz1jb29raWUpDQogICAgICAgICAgICB0b2sgPSByZS5zZWFyY2goJ3siYWNjZXNzVG9rZW4iOiIoRUFBRlx3KyknLHJlcS50ZXh0KS5ncm91cCgxKQ0KICAgICAgICAgICAgcmV0dXJuKHRvaykNCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgIHJldHVybignQ29va2llcyBJbnZhbGlkJykNCg0KZGVmIGdlbmVyYXRlX3Rva2VuX2VhYmIoY29rKTogIyBIdWIgTWF0ZXJpIElrbGFuIFRva2VuDQogICAgdHJ5Og0KICAgICAgICBjb29raWUgPSB7J2Nvb2tpZSc6Y29rfQ0KICAgICAgICB3aXRoIHJlcXVlc3RzLlNlc3Npb24oKSBhcyB4eXo6DQogICAgICAgICAgICB1cmwgPSAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2Fkcy9hZGJ1aWxkZXIvaG9tZScNCiAgICAgICAgICAgIHJlcSA9IHh5ei5nZXQodXJsLGNvb2tpZXM9Y29va2llKQ0KICAgICAgICAgICAgdG9rID0gcmUuc2VhcmNoKCciYWNjZXNzVG9rZW4iOiIoRUFCQlx3KyknLHJlcS50ZXh0KS5ncm91cCgxKQ0KICAgICAgICAgICAgcmV0dXJuKHRvaykNCiAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6DQogICAgICAgIHJldHVybignQ29va2llcyBJbnZhbGlkJykNCg0KaWYgX19uYW1lX18gPT0gJ19fbWFpbl9fJzoNCiAgICBjbGVhcigpDQogICAgaW5wdXRfY29va2llKCkNCiAgICBleGl0KCcnKQ0K'))
